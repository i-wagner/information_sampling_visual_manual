clear all; close all; clc

%% Init
initFig;
folder.fig = strcat(folder.root, "5_outreach/manuscript/figures/fig4");

%% Plot settings
idx.doubleTargetVisual = 2;
idx.doubleTargetManual = 4;
plotDat = cat(3, ...
              data.fixations.timecourse.onChosen(:,:,idx.doubleTargetVisual), ...
              data.fixations.timecourse.onEasy(:,:,idx.doubleTargetVisual), ...
              data.fixations.timecourse.onSmaller(:,:,idx.doubleTargetVisual), ...
              data.fixations.timecourse.onClosest(:,:,idx.doubleTargetVisual), ...
              data.fixations.latenciesFirstGazeShift(:,:,idx.doubleTargetVisual), ...
              data.fixations.timecourse.onChosen(:,:,idx.doubleTargetManual), ...
              data.fixations.timecourse.onEasy(:,:,idx.doubleTargetManual), ...
              data.fixations.timecourse.onSmaller(:,:,idx.doubleTargetManual), ...
              data.fixations.timecourse.onClosest(:,:,idx.doubleTargetManual), ...
              data.fixations.latenciesFirstGazeShift(:,:,idx.doubleTargetManual));
nPanels = size(plotDat, 3);
nPanelsPerCond = nPanels / 2;

yLabels = repmat(["Prop. mov. chosen ", ...
                  "Prop. mov. easy ", ...
                  "Prop. mov. smaller ", ...
                  "Prop. mov. closest ", ...
                  "Mov. latency [ms] "], 1, 2);
figLabel = [repmat("[ocm.]", 1, nPanelsPerCond), ...
            repmat("[manual]", 1, nPanelsPerCond)];
axLimits = [0, (size(plotDat, 2) + 1), 0, 1];
meansOffset = 0.25;

% Proportion on chosen: 
% chance performance = 1/2, element from chosen/non-chosen set
% 
% Proportion on smaller:
% chance performance = 1/2, element from easy/difficult set
% 
% Proportion on smaller: 
% chance performance = 1/4, target/distractor from easy/difficult set
% 
% Proportion on closest: 
% % chance performance = 1/10, element on the screen
lineCoordsY = repmat([[0.50, 0.50]; [0.50, 0.50]; ...
                      [0.25, 0.25]; [1/10, 1/10]; [NaN, NaN]], 2, 1);

%% Plot
hFig = figure;
tiledlayout(2, nPanelsPerCond);
for p = 1:nPanels % Panel
    if any(any(plotDat(:,:,p) > 1))
        thisLimits = axLimits;
        thisLimits(3:4) = [90, 550];
        thisTicksY = 100:150:600;
    else
        thisLimits = axLimits;
        thisTicksY = 0:0.25:1;
    end
    if any(p == 1:nPanelsPerCond) % Visual search experiment
        plt.color.condition = plt.color.green;
    else
        plt.color.condition = plt.color.purple;
    end
    xSingleSubjects = 1:size(plotDat(:,:,p), 2);
    xMeans = linspace((xSingleSubjects(1) - meansOffset), ...
                      (xSingleSubjects(end) + meansOffset), ...
                      numel(xSingleSubjects));

    nexttile;
    line(thisLimits(1:2), lineCoordsY(p,:), ...
         'LineStyle', '-', ...
         'LineWidth', plt.line.widthThin, ...
         'Color', plt.color.black, ...
         'HandleVisibility', 'off');
    hold on
    plot(xSingleSubjects, plotDat(:,:,p), ...
         'o-', ...
         'MarkerSize', plt.marker.sizeSmall, ...
         'MarkerFaceColor', plt.color.condition(2,:), ...
         'MarkerEdgeColor', plt.color.white, ...
         'LineWidth', plt.line.widthThin, ...
         'Color', plt.color.condition(2,:));
    errorbar(xMeans, ...
             mean(plotDat(:,:,p), 1, 'omitnan'), ...
             ci_mean(plotDat(:,:,p)), ...
             'o', ...
             'MarkerSize', plt.marker.sizeLarge, ...
             'MarkerFaceColor', plt.color.condition(1,:), ...
             'MarkerEdgeColor', 'none', ...
             'LineWidth', plt.line.widthThin, ...
             'CapSize', 0, ...
             'Color', plt.color.condition(1,:), ...
             'HandleVisibility', 'off');
    hold off
    axis(thisLimits, 'square');
    xlabel("# mov. after trial start");
    ylabel(strcat(yLabels(p), figLabel{p}));
    xticks(xSingleSubjects);
    yticks(thisTicksY);
    box off

    if checkAxLim(thisLimits(3:4), plotDat(:,:,p))
        error("Current axis limits result in values being cut-off!");
    end
end
opt.size = [63, 27];
opt.imgname = folder.fig;
opt.save = true;
prepareFigure(hFig, opt);
close;