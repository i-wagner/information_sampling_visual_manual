clear all; close all; clc

%% Init
folder.root = '/Users/ilja/Dropbox/12_work/mr_informationSamplingVisualManual/';
folder.data = strcat(folder.root, '2_data/');

nDecimals = 2;

%% Load data
data = load(strcat(folder.data, 'data_newPipeline.mat'));

% Bonus payout
bonusPayout.visual.single = ...
    getStats(data.data.performance.finalScores(:,1));
bonusPayout.visual.double = ...
    getStats(data.data.performance.finalScores(:,2));
bonusPayout.visual.both = ...
    getStats(sum(data.data.performance.finalScores(:,1:2), 2));

bonusPayout.manual.single = ...
    getStats(data.data.performance.finalScores(:,3));
bonusPayout.manual.double = ...
    getStats(data.data.performance.finalScores(:,4));
bonusPayout.manual.both = ...
    getStats(sum(data.data.performance.finalScores(:,3:4), 2));

% Completed trials
completedTrials.visual.single = getStats(data.data.log.nCompletedTrials(:,1));
completedTrials.visual.double = getStats(data.data.log.nCompletedTrials(:,2));
completedTrials.manual.single = getStats(data.data.log.nCompletedTrials(:,3));
completedTrials.manual.double = getStats(data.data.log.nCompletedTrials(:,4));

% Excluded trials
excludedTrials.visual.single = ...
    getStats(data.quality.proportionValidTrials(:,1) .* 100);
excludedTrials.visual.double = ...
    getStats(data.quality.proportionValidTrials(:,2) .* 100);
excludedTrials.manual.single = ...
    getStats(data.quality.proportionValidTrials(:,3) .* 100);
excludedTrials.manual.double = ...
    getStats(data.quality.proportionValidTrials(:,4) .* 100);

% Proportion fixations on background
% Cannot detect background fixations in manual, so no point in looking at
% them. 
% Matrix stores two version of the data: proportions calculated over all
% fixations (:,:,1) or proportions, first, calculated for individual
% trials, then averaged over trials (:,:,2)
proFixOnBg.visual.single = ...
    getStats(data.quality.proportionOnBackground(:,1,2));
proFixOnBg.visual.double = ...
    getStats(data.quality.proportionOnBackground(:,2,2));

% Discrimination performance
performance.discrimination.easy.visual.single = ...
    getStats(data.data.performance.proportionCorrect.easy(:,1));
performance.discrimination.easy.manual.single = ...
    getStats(data.data.performance.proportionCorrect.easy(:,3));

performance.discrimination.difficult.visual.single = ...
    getStats(data.data.performance.proportionCorrect.difficult(:,1));
performance.discrimination.difficult.manual.single = ...
    getStats(data.data.performance.proportionCorrect.difficult(:,3));

% Time to complete conditions
time.conditionDurations = data.data.time.conditionDurations;

% Planning times
performance.search.planning.easy.visual.single = ...
    getStats(data.data.time.planning.mean.easy(:,1));
performance.search.planning.easy.manual.single = ...
    getStats(data.data.time.planning.mean.easy(:,3));

performance.search.planning.difficult.visual.single = ...
    getStats(data.data.time.planning.mean.difficult(:,1));
performance.search.planning.difficult.manual.single = ...
    getStats(data.data.time.planning.mean.difficult(:,3));

% Inspection times
performance.search.inspection.easy.visual.single = ...
    getStats(data.data.time.inspection.mean.easy(:,1));
performance.search.inspection.easy.manual.single = ...
    getStats(data.data.time.inspection.mean.easy(:,3));

performance.search.inspection.difficult.visual.single = ...
    getStats(data.data.time.inspection.mean.difficult(:,1));
performance.search.inspection.difficult.manual.single = ...
    getStats(data.data.time.inspection.mean.difficult(:,3));

% Response times
performance.search.response.easy.visual.single = ...
    getStats(data.data.time.response.mean.easy(:,1));
performance.search.response.easy.manual.single = ...
    getStats(data.data.time.response.mean.easy(:,3));

performance.search.response.difficult.visual.single = ...
    getStats(data.data.time.response.mean.difficult(:,1));
performance.search.response.difficult.manual.single = ...
    getStats(data.data.time.response.mean.difficult(:,3));

% Means of sigmoid
performance.choice.mean.visual.double = ...
    getStats(data.data.choice.sigmoidFit(:,1,2));
performance.choice.mean.manual.double = ...
    getStats(data.data.choice.sigmoidFit(:,1,4));

% Slopes of sigmoids
performance.choice.slopes_sigmoids.visual.double = ...
    getStats(data.data.choice.sigmoidFit(:,3,2));
performance.choice.slopes_sigmoids.manual.double = ...
    getStats(data.data.choice.sigmoidFit(:,3,4));

% Proportion movements to chosen target
performance.choice.sampling.onChosen.first.visual.double = ...
    getStats(data.data.fixations.timecourse.onChosen(:,1,2));
performance.choice.sampling.onChosen.second.visual.double = ...
    getStats(data.data.fixations.timecourse.onChosen(:,2,2));

performance.choice.sampling.onChosen.first.manual.double = ...
    getStats(data.data.fixations.timecourse.onChosen(:,1,4));
performance.choice.sampling.onChosen.second.manual.double = ...
    getStats(data.data.fixations.timecourse.onChosen(:,2,4));

% Proportion movements on elements from the chosen set
% NOT SEPERATED BY SET SIZE
performance.choice.sampling.onChosen.allSets.visual.double = ...
    getStats(mean(data.data.fixations.propFixOnChosenModelEval(:,:,2), 2, "omitnan"));
performance.choice.sampling.onChosen.allSets.manual.double = ...
    getStats(mean(data.data.fixations.propFixOnChosenModelEval(:,:,4), 2, "omitnan"));

performance.choice.sampling.onChosen.allSets.visual.model = ...
    getStats(mean(data.probabilisticModel.pred.visual.propFixChosen, 2, "omitnan"));
performance.choice.sampling.onChosen.allSets.manual.model = ...
    getStats(mean(data.probabilisticModel.pred.manual.propFixChosen, 2, "omitnan"));

% Proportion movements to easy set
performance.choice.sampling.onEasy.first.visual.double = ...
    getStats(data.data.fixations.timecourse.onEasy(:,1,2));
performance.choice.sampling.onEasy.second.visual.double = ...
    getStats(data.data.fixations.timecourse.onEasy(:,2,2));

performance.choice.sampling.onEasy.first.manual.double = ...
    getStats(data.data.fixations.timecourse.onEasy(:,1,4));
performance.choice.sampling.onEasy.second.manual.double = ...
    getStats(data.data.fixations.timecourse.onEasy(:,2,4));

% Proportion movements to smaller set
performance.choice.sampling.onSmaller.first.visual.double = ...
    getStats(data.data.fixations.timecourse.onSmaller(:,1,2));
performance.choice.sampling.onSmaller.second.visual.double = ...
    getStats(data.data.fixations.timecourse.onSmaller(:,2,2));

performance.choice.sampling.onSmaller.first.manual.double = ...
    getStats(data.data.fixations.timecourse.onSmaller(:,1,4));
performance.choice.sampling.onSmaller.second.manual.double = ...
    getStats(data.data.fixations.timecourse.onSmaller(:,2,4));

% Proportion movements to closest element
performance.choice.sampling.onClosest.first.visual.double = ...
    getStats(data.data.fixations.timecourse.onClosest(:,1,2));
performance.choice.sampling.onClosest.second.visual.double = ...
    getStats(data.data.fixations.timecourse.onClosest(:,2,2));

performance.choice.sampling.onClosest.first.manual.double = ...
    getStats(data.data.fixations.timecourse.onClosest(:,1,4));
performance.choice.sampling.onClosest.second.manual.double = ...
    getStats(data.data.fixations.timecourse.onClosest(:,2,4));

% Latencies of gaze shifts
performance.choice.sampling.latencies.first.visual.double = ...
    getStats(data.data.fixations.latenciesFirstGazeShift(:,1,2));
performance.choice.sampling.latencies.second.visual.double = ...
    getStats(data.data.fixations.latenciesFirstGazeShift(:,2,2));

performance.choice.sampling.latencies.first.manual.double = ...
    getStats(data.data.fixations.latenciesFirstGazeShift(:,1,4));
performance.choice.sampling.latencies.second.manual.double = ...
    getStats(data.data.fixations.latenciesFirstGazeShift(:,2,4));

% Gain per time
performance.gainPerTime.visual.double = ...
    getStats(data.data.performance.gainPerTime(:,2));
performance.gainPerTime.manual.double = ...
    getStats(data.data.performance.gainPerTime(:,4));

performance.gainPerTime.visual.idealObserver = ...
    getStats(data.idealObserver.performance(:,2));
performance.gainPerTime.manual.idealObserver = ...
    getStats(data.idealObserver.performance(:,4));

performance.gainPerTime.visual.model = ...
    getStats(data.probabilisticModel.pred.visual.performance);
performance.gainPerTime.manual.model = ...
    getStats(data.probabilisticModel.pred.manual.performance);

% Sampling noise
proModel.noise.sampling.visual = ...
    getStats(data.probabilisticModel.pred.visual.freeParameter(:,1));
proModel.noise.sampling.manual = ...
    getStats(data.probabilisticModel.pred.manual.freeParameter(:,1));

% Decision noise
proModel.noise.decision.visual = ...
    getStats(data.probabilisticModel.pred.visual.freeParameter(:,2));
proModel.noise.decision.manual = ...
    getStats(data.probabilisticModel.pred.manual.freeParameter(:,2));

%% Proportion valid trials
showStats(excludedTrials.visual.single, ...
          'VALID TRIALS', ...
          'visual search', ...
          'single-target', ...
          nDecimals);
showStats(excludedTrials.visual.double, ...
          'VALID TRIALS', ...
          'visual search', ...
          'double-target', ...
          nDecimals);

showStats(excludedTrials.manual.single, ...
          'VALID TRIALS', ...
          'manual search', ...
          'single-target', ...
          nDecimals);
showStats(excludedTrials.manual.double, ...
          'VALID TRIALS', ...
          'manual search', ...
          'double-target', ...
          nDecimals);

%% Proportion fixations on background
showStats(proFixOnBg.visual.single, ...
          'PROPORTION FIXATIONS ON BACKGROUND', ...
          'visual search', ...
          'single-target', ...
          nDecimals);
showStats(proFixOnBg.visual.double, ...
          'PROPORTION FIXATIONS ON BACKGROUND', ...
          'visual search', ...
          'double-target', ...
          nDecimals);

%% Completed trials
showStats(completedTrials.visual.single, ...
          'COMPLETED TRIALS', ...
          'visual search', ...
          'single-target', ...
          nDecimals)
showStats(completedTrials.visual.double, ...
          'COMPLETED TRIALS', ...
          'visual search', ...
          'double-target', ...
          nDecimals)

showStats(completedTrials.manual.single, ...
          'COMPLETED TRIALS', ...
          'manual search', ...
          'single-target', ...
          nDecimals)
showStats(completedTrials.manual.double, ...
          'COMPLETED TRIALS', ...
          'manual search', ...
          'double-target', ...
          nDecimals)

%% Bonus payout
showStats(bonusPayout.visual.single, ...
          'BONUS PAYOUT', ...
          'visual search', ...
          'single-target', ...
          nDecimals);
showStats(bonusPayout.visual.double, ...
          'BONUS PAYOUT', ...
          'visual search', ...
          'double-target', ...
          nDecimals);

showStats(bonusPayout.manual.single, ...
          'BONUS PAYOUT', ...
          'manual search', ...
          'single-target', ...
          nDecimals);
showStats(bonusPayout.manual.double, ...
          'BONUS PAYOUT', ...
          'manual search', ...
          'double-target', ...
          nDecimals);

showStats(bonusPayout.visual.both, ...
          'BONUS PAYOUT', ...
          'visual search', ...
          'single- and double-target', ...
          nDecimals);
showStats(bonusPayout.manual.both, ...
          'BONUS PAYOUT', ...
          'manual search', ...
          'single- and double-target', ...
          nDecimals);

%% Discrimination performance
% Easy target
showStats(performance.discrimination.easy.visual.single, ...
          'PERCEPTUAL PERFORMANCE', ...
          'visual search', ...
          'single-target, easy target', ...
          nDecimals);
showStats(performance.discrimination.easy.manual.single, ...
          'PERCEPTUAL PERFORMANCE', ...
          'manual search', ...
          'single-target, easy target', ...
          nDecimals);

% Difficult target
showStats(performance.discrimination.difficult.visual.single, ...
          'PERCEPTUAL PERFORMANCE', ...
          'visual search', ...
          'single-target, difficult target', ...
          nDecimals);
showStats(performance.discrimination.difficult.manual.single, ...
          'PERCEPTUAL PERFORMANCE', ...
          'manual search', ...
          'single-target, difficult target', ...
          nDecimals);

%% Planning times
% Easy target
showStats(performance.search.planning.easy.visual.single, ...
          'PLANNING TIMES', ...
          'visual search', ...
          'single-target, easy target', ...
          0);
showStats(performance.search.planning.easy.manual.single, ...
          'PLANNING TIME', ...
          'manual search', ...
          'single-target, easy target', ...
          0);

% Difficult target
showStats(performance.search.planning.difficult.visual.single, ...
          'PLANNING TIME', ...
          'visual search', ...
          'single-target, difficult target', ...
          0);
showStats(performance.search.planning.difficult.manual.single, ...
          'PLANNING TIME', ...
          'manual search', ...
          'single-target, difficult target', ...
          0);

%% Inspection times
% Easy target
showStats(performance.search.inspection.easy.visual.single, ...
          'INSPECTION TIME', ...
          'visual search', ...
          'single-target, easy target', ...
          0);
showStats(performance.search.inspection.easy.manual.single, ...
          'INSPECTION TIME', ...
          'manual search', ...
          'single-target, easy target', ...
          0);

% Difficult target
showStats(performance.search.inspection.difficult.visual.single, ...
          'INSPECTION TIME', ...
          'visual search', ...
          'single-target, difficult target', ...
          0);
showStats(performance.search.inspection.difficult.manual.single, ...
          'INSPECTION TIME', ...
          'manual search', ...
          'single-target, difficult target', ...
          0);

%% Response times
% Easy target
showStats(performance.search.response.easy.visual.single, ...
          'RESPONSE TIME', ...
          'visual search', ...
          'single-target, easy target', ...
          0);
showStats(performance.search.response.easy.manual.single, ...
          'RESPONSE TIME', ...
          'manual search', ...
          'single-target, easy target', ...
          0);

% Difficult target
showStats(performance.search.response.difficult.visual.single, ...
          'RESPONSE TIME', ...
          'visual search', ...
          'single-target, difficult target', ...
          0);
showStats(performance.search.response.difficult.manual.single, ...
          'RESPONSE TIME', ...
          'manual search', ...
          'single-target, difficult target', ...
          0);

%% Means of sigmoids
showStats(performance.choice.mean.visual.double, ...
          'MEANS OF SIGMOIDS', ...
          'visual search', ...
          'double-target', ...
          2);
showStats(performance.choice.mean.manual.double, ...
          'MEANS OF SIGMOIDS', ...
          'manual search', ...
          'double-target', ...
          2);

%% Slopes of sigmoids
showStats(performance.choice.slopes_sigmoids.visual.double, ...
          'SLOPES OF SIGMOIDS', ...
          'visual search', ...
          'double-target', ...
          2);
showStats(performance.choice.slopes_sigmoids.manual.double , ...
          'SLOPES OF SIGMOIDS', ...
          'manual search', ...
          'double-target', ...
          2);

%% Proportion movements 
% To chosen target
showStats(performance.choice.sampling.onChosen.first.visual.double, ...
          'PROPORTION FIRST MOVEMENTS TO CHOSEN TARGET', ...
          'visual search', ...
          'double-target', ...
          2);
showStats(performance.choice.sampling.onChosen.second.visual.double, ...
          'PROPORTION SECOND MOVEMENTS TO CHOSEN TARGET', ...
          'visual search', ...
          'double-target', ...
          2);

showStats(performance.choice.sampling.onChosen.first.manual.double, ...
          'PROPORTION FIRST MOVEMENTS TO CHOSEN TARGET', ...
          'manual search', ...
          'double-target', ...
          2);
showStats(performance.choice.sampling.onChosen.second.manual.double, ...
          'PROPORTION SECOND MOVEMENTS TO CHOSEN TARGET', ...
          'manual search', ...
          'double-target', ...
          2);

% To easy set
showStats(performance.choice.sampling.onEasy.first.visual.double, ...
          'PROPORTION FIRST MOVEMENTS TO EASY SET', ...
          'visual search', ...
          'double-target', ...
          2);
showStats(performance.choice.sampling.onEasy.second.visual.double, ...
          'PROPORTION SECOND MOVEMENTS TO EASY SET', ...
          'visual search', ...
          'double-target', ...
          2);

showStats(performance.choice.sampling.onEasy.first.manual.double, ...
          'PROPORTION FIRST MOVEMENTS TO EASY SET', ...
          'manual search', ...
          'double-target', ...
          2);
showStats(performance.choice.sampling.onEasy.second.manual.double, ...
          'PROPORTION SECOND MOVEMENTS TO EASY SET', ...
          'manual search', ...
          'double-target', ...
          2);

% To smaller set
showStats(performance.choice.sampling.onSmaller.first.visual.double, ...
          'PROPORTION FIRST MOVEMENTS TO SMALLER SET', ...
          'visual search', ...
          'double-target', ...
          2);
showStats(performance.choice.sampling.onSmaller.second.visual.double, ...
          'PROPORTION SECOND MOVEMENTS TO SMALLER SET', ...
          'visual search', ...
          'double-target', ...
          2);

showStats(performance.choice.sampling.onSmaller.first.manual.double, ...
          'PROPORTION FIRST MOVEMENTS TO SMALLER SET', ...
          'manual search', ...
          'double-target', ...
          2);
showStats(performance.choice.sampling.onSmaller.second.manual.double, ...
          'PROPORTION SECOND MOVEMENTS TO SMALLER SET', ...
          'manual search', ...
          'double-target', ...
          2);

% To closest stimulus
showStats(performance.choice.sampling.onClosest.first.visual.double, ...
          'PROPORTION FIRST MOVEMENTS TO CLOSEST STIMULUS', ...
          'visual search', ...
          'double-target', ...
          2);
showStats(performance.choice.sampling.onClosest.second.visual.double, ...
          'PROPORTION SECOND MOVEMENTS TO CLOSEST STIMULUS', ...
          'visual search', ...
          'double-target', ...
          2);

showStats(performance.choice.sampling.onClosest.first.manual.double, ...
          'PROPORTION FIRST MOVEMENTS TO CLOSEST STIMULUS', ...
          'manual search', ...
          'double-target', ...
          2);
showStats(performance.choice.sampling.onClosest.second.manual.double, ...
          'PROPORTION SECOND MOVEMENTS TO CLOSEST STIMULUS', ...
          'manual search', ...
          'double-target', ...
          2);

% Mean proportion movements on chosen set
% Visual search
showStats(performance.choice.sampling.onChosen.allSets.visual.double, ...
          'PROPORTION OVERALL MOVEMENTS TO CHOSEN SET', ...
          'visual search', ...
          'double-target', ...
          2);
showStats(performance.choice.sampling.onChosen.allSets.visual.model, ...
          'PROPORTION OVERALL MOVEMENTS TO CHOSEN SET', ...
          'visual search', ...
          'double-target', ...
          2);

[r, p] = corr(mean(data.data.fixations.propFixOnChosenModelEval(:,:,2), 2, 'omitnan'), ...
              mean(data.probabilisticModel.pred.visual.propFixChosen, 2, 'omitnan'), ...
              "Rows", "Complete", ...
              'type','Spearman');
disp(strcat("r = ", num2str(round(r, nDecimals))));
disp(strcat("p = ", num2str(round(p, 3))));

% Manual search
showStats(performance.choice.sampling.onChosen.allSets.manual.double, ...
          'PROPORTION OVERALL MOVEMENTS TO CHOSEN SET', ...
          'manual search', ...
          'double-target', ...
          2);
showStats(performance.choice.sampling.onChosen.allSets.manual.model, ...
          'PROPORTION OVERALL MOVEMENTS TO CHOSEN SET', ...
          'manual search', ...
          'double-target', ...
          2);

[r, p] = corr(mean(data.data.fixations.propFixOnChosenModelEval(:,:,4), 2, 'omitnan'), ...
              mean(data.probabilisticModel.pred.manual.propFixChosen, 2, 'omitnan'), ...
              "Rows", "Complete", ...
              'type','Spearman');
disp(strcat("r = ", num2str(round(r, nDecimals))));
disp(strcat("p = ", num2str(round(p, 3))));

%% Latencies of gaze shifts
showStats(performance.choice.sampling.latencies.first.visual.double, ...
          'LATENCIES FIRST MOVEMENTS', ...
          'visual search', ...
          'double-target', ...
          0);
showStats(performance.choice.sampling.latencies.second.visual.double, ...
          'LATENCIES SECOND MOVEMENTS', ...
          'visual search', ...
          'double-target', ...
          0);

showStats(performance.choice.sampling.latencies.first.manual.double, ...
          'LATENCIES FIRST MOVEMENTS', ...
          'manual search', ...
          'double-target', ...
          0);
showStats(performance.choice.sampling.latencies.second.manual.double, ...
          'LATENCIES SECOND MOVEMENTS', ...
          'manual search', ...
          'double-target', ...
          0);

%% Gain per time
showStats(performance.gainPerTime.visual.double, ...
          'GAIN PER TIME EMPIRICAL', ...
          'visual search', ...
          'double-target', ...
          nDecimals);
showStats(performance.gainPerTime.manual.double, ...
          'GAIN PER TIME EMPIRICAL', ...
          'manual search', ...
          'double-target', ...
          nDecimals);

showStats(performance.gainPerTime.visual.idealObserver, ...
          'GAIN PER TIME IDEAL OBSERVER', ...
          'visual search', ...
          'double-target', ...
          nDecimals);
showStats(performance.gainPerTime.manual.idealObserver, ...
          'GAIN PER TIME IDEAL OBSERVER', ...
          'manual search', ...
          'double-target', ...
          nDecimals);

showStats(performance.gainPerTime.visual.model, ...
          'GAIN PER TIME MODEL', ...
          'visual search', ...
          'double-target', ...
          nDecimals);
showStats(performance.gainPerTime.manual.model, ...
          'GAIN PER TIME MODEL', ...
          'manual search', ...
          'double-target', ...
          nDecimals);

% Correlation: model gain vs. empirical gain
% Visual search
[r, p] = corr(data.probabilisticModel.pred.visual.performance, ...
              data.data.performance.gainPerTime(:,2), ...
              "Rows", "Complete", ...
              'type','Spearman');
disp(strcat("r = ", num2str(round(r, nDecimals))));
disp(strcat("p = ", num2str(round(p, 3))));

% Manual search
[r, p] = corr(data.probabilisticModel.pred.manual.performance, ...
              data.data.performance.gainPerTime(:,4), ...
              "Rows", "Complete", ...
              'type','Spearman');
disp(strcat("r = ", num2str(round(r, nDecimals))));
disp(strcat("p = ", num2str(round(p, 3))));

%% Decision noise
showStats(proModel.noise.decision.visual, ...
          'DECISION NOISE', ...
          'visual search', ...
          'double-target', ...
          nDecimals);

showStats(proModel.noise.decision.manual, ...
          'DECISION NOISE', ...
          'manual search', ...
          'double-target', ...
          nDecimals);

%% Sampling noise
showStats(proModel.noise.sampling.visual, ...
          'SAMPLING NOISE', ...
          'visual search', ...
          'double-target', ...
          nDecimals);

showStats(proModel.noise.sampling.manual, ...
          'SAMPLING NOISE', ...
          'manual search', ...
          'double-target', ...
          nDecimals);